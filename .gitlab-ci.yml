# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/development/cicd/templates/
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

image: gradle:8-jdk17-alpine

stages:          # List of stages for jobs, and their order of execution
  - build
  - test
  - package
  - deploy

build-job:       # This job runs in the build stage, which runs first.
  stage: build
  script:
    - echo "Compiling the code..."
    - gradle -Dorg.gradle.welcome=never --no-daemon compileJava

    - echo "Compile complete."
  artifacts:
    paths:
      - build





pages: # publish Javadoc website
  tags:
    - docker
  image: gradle:8-jdk17-alpine
  stage: build
  script:
    - set +o pipefail
    - javadoc -d docs $(find src/main -name '*.java')
    - mkdir public
    - echo 'test' >public/test.txt
    - mv docs public/
    - ls -R public | head
    - echo 'first ten public/ files listed'
  artifacts:
    paths:
      - public
  only:
    - main

unit-test-job:
  tags:
    - docker
  stage: test
  script:
    - echo "Attempting to run unit tests..."
    - gradle --no-daemon test

create-jar:
  stage: package
  script:
    - echo 'Attempting to create JAR file'
    - gradle -Dorg.gradle.welcome=never --no-daemon jar
    - echo 'Done.'
  artifacts:
    paths:
      - build/libs/andie-1.0.0.jar
